package inhatc.hja.unilife.user.controller;

import java.util.List;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import inhatc.hja.unilife.user.service.FriendService;
import inhatc.hja.unilife.user.dto.SimpleUserDto;
import inhatc.hja.unilife.user.entity.User;
import inhatc.hja.unilife.user.repository.UserRepository;

@RestController
public class FriendController {

    private final UserRepository userRepository;
    private final FriendService friendService;   // ‚Üê FriendService Ï£ºÏûÖ

    public FriendController(UserRepository userRepository,
                            FriendService friendService) {
        this.userRepository = userRepository;
        this.friendService  = friendService;
    }

    @GetMapping("/api/calendar/friends/list")
    public List<SimpleUserDto> getFriendList(@AuthenticationPrincipal UserDetails userDetails) {
        // ‚úÖ Î°úÍ∑∏Ïù∏ ID(user_id)Î°ú ÏÇ¨Ïö©Ïûê Í∞ùÏ≤¥ Ï°∞Ìöå
        String userLoginId = userDetails.getUsername(); // ex) ÌïôÎ≤àÏù¥ Ïù¥ Í∞í

        // üëâ DBÏóêÏÑú Ïã§Ï†ú Long id(pk)Î•º Í∞ÄÏ†∏Ïò§Í∏∞
        User user = userRepository.findByUserId(userLoginId)
            .orElseThrow(() -> new IllegalArgumentException("ÏÇ¨Ïö©Ïûê ÏóÜÏùå"));

        return friendService.getFriendList(user.getId());
    }
}